% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MQE_plot.R
\name{MQE_plot}
\alias{MQE_plot}
\title{MQE model QTL profile}
\usage{
MQE_plot(mppData, Qprof, QTL, window = 30, threshold = 3,
  main = "MQE QTL profile")
}
\arguments{
\item{mppData}{An object of class \code{mppData}
See \code{\link{mppData_form}} for details.}

\item{Qprof}{Object of class \code{QTLprof} returned by the function
\code{\link{MQE_CIM}} with argument \code{chg.Qeff = TRUE}.}

\item{QTL}{list of QTL positions with the corresponding QTL incidence
matrix returned by the function \code{\link{MQE_forward}}.}

\item{window}{numeric value representing the distance in centi-Morgan on the
rigth and left side of a QTL position that will be coloured according
to the type of QTL effect. Default = 20.}

\item{threshold}{\code{Numeric} QTL significance threshold value draw on
the plots. Default = 3.}

\item{main}{Title of the graph. Default = "MQE QTL profile".}
}
\description{
Plots the QTL profile of a multi-QTL effect (MQE) model determined by forward
regression (\code{\link{MQE_forward}}).
}
\details{
This function can be used to plot the final results of a MQE model. Once the
list of QTL and their type of effect have been determined using
\code{\link{MQE_forward}}, the user can introduce these values in the function
\code{\link{MQE_CIM}} and use the argument \code{chg.Qeff = TRUE}. This means
that \code{\link{MQE_CIM}} will compute a CIM profile with the QTL list used
as cofactor and change the type of QTL effect of the tested position
for the one of the detected QTL when it enter their region. Then the profile
obtained and the QTL list can be introduced in \code{MQE_plot}. This function
will draw the QTL profile and colour the QTL region according to the type of
QTL effect at the QTL position (cross-specific: black, parental: red,
ancestral: green and bi-allelic: blue).
}
\examples{

data(USNAM_mppData)
data(USNAM_mppData_bi)
data(USNAM_parClu)

mppData <- USNAM_mppData
mppData_bi <- USNAM_mppData_bi
par.clu <- USNAM_parClu


# equalize the list of markers of the two mppData objects and par.clu

com.mk.list <- intersect(mppData$map$mk.names, mppData_bi$map$mk.names)

mppData <- mppData_subset(mppData = mppData, mk.list = com.mk.list)
mppData_bi <- mppData_subset(mppData = mppData_bi, mk.list = com.mk.list)
par.clu <- par.clu[rownames(par.clu) \%in\% com.mk.list, ]


QTL <- MQE_forward(mppData = mppData, mppData_bi = mppData_bi,
                   Q.eff = c("par", "anc", "biall"), par.clu = par.clu)

CIM <- MQE_CIM(mppData = mppData, mppData_bi = mppData_bi, Q.eff = "cr",
               par.clu = par.clu, cofactors = QTL[, 1],
               cof.Qeff = QTL[, 5],
               chg.Qeff = TRUE)

MQE_plot(mppData = mppData, Qprof = CIM, QTL = QTL)

}
\author{
Vincent Garin
}
\seealso{
\code{\link{MQE_CIM}}, \code{\link{MQE_forward}}
}

