% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QC_proc.R
\name{QC_proc}
\alias{QC_proc}
\title{Quality control procedure}
\usage{
QC_proc(geno.off, geno.par, map, trait, cross.ind, par.per.cross,
  subcross.ind = NULL, par.per.subcross = NULL, n.lim = 15,
  MAF.pop.lim = 0.05, MAF.cr.lim = NULL, MAF.cr.miss = TRUE,
  mk.miss = 0.1, gen.miss = 0.25, ABH = TRUE, het_miss_par = FALSE,
  verbose = TRUE, impute = FALSE, impute.type = "random", map_bp = NULL,
  replace.value = NULL, label.heter = "alleleCoding", parallel = FALSE,
  cluster = NULL)
}
\arguments{
\item{geno.off}{\code{Character} marker score \code{matrix} of the offspring
with genotypes as row and markers as column.
\strong{Rows names must be the offspring genotypes identifiers similar to
the one used in \code{trait}. The columns names must be the marker names
similar to the one used in \code{map}. Marker scores must be coded using one
letter per allele. For example, AA, CC, GG, TT, AC, AG, AT, CA, CG, CT,
GA, GC, GT, TA, TC, TG. Missing values must be coded \code{NA}.}}

\item{geno.par}{\code{Character} marker score \code{matrix} of the parents
with genotypes as row and markers as column.
\strong{Rows names must be the parents genotypes identifiers similar to
the one used in \code{par.per.cross}. The columns names must be the marker
names similar to the one used in \code{map}. Marker scores must be coded
using one letter per allele. For example, AA, CC, GG, TT, AC, AG, AT, CA,
CG, CT, GA, GC, GT, TA, TC, TG. Missing values must be coded \code{NA}.}}

\item{map}{Three columns \code{data.frame} with: 1) marker or in between
position identifiers; 2) chromosome; 3) positions in centi-Morgan.\strong{
The marker identifiers must be identical to the column names of the maker
matrices (\code{geno.off} and \code{geno.par}).}}

\item{trait}{Two columns \code{data.frame} with : 1) \code{character}
genotypes identifiers; 2) \code{numeric} trait values. \strong{The genotypes
identifiers must be identical to the rownames of the offspring marker matrix
(\code{geno.off}).}}

\item{cross.ind}{\code{Character} vector indicating to which cross each
genotype belongs.}

\item{par.per.cross}{Three columns \code{Character matrix} specifying :
1) the cross indicators; 2) the parents 1 identifiers
of the crosses; 3) the parents 2 identifiers of the crosses.
\strong{The list of cross must contain the same cross indicators as in
\code{cross.ind} and they must appear in the same order.
The list of parent identifiers must be the same to the rownames of
the argument \code{geno.par}}.}

\item{subcross.ind}{Optional \code{character} vector specifying to which
sub-cross each genotype belong. \strong{This argument is only necessary if
the user want to make ABH assignement per sub-cross. In that case argument
\code{par.per.subcross} must also be provided.}. Default = NULL.}

\item{par.per.subcross}{Optional three columns \code{Character matrix}
specifying : 1) the sub-cross indicators; 2) the parents 1 identifiers
of the sub-crosses; 3) the parents 2 identifiers of the sub-crosses.
\strong{This argument is only necessary if the user want to make ABH
assignement per sub-cross. In that case, the list of cross must contain the
same cross indicators as in \code{subcross.ind} and they must appear in the
same order. The list of parent identifiers must be the same to the rownames of
the argument \code{geno.par}}. Default = NULL.}

\item{n.lim}{\code{Numeric} value specifying the minimum cross size.
Default = 15.}

\item{MAF.pop.lim}{\code{Numeric} value specifying the minimum minor allele
frequency for a marker at the population level. Default = 0.05.}

\item{MAF.cr.lim}{\code{Numeric vector} specifying the critical within cross
MAF. Marker with a problematic segregation rate in at least
one cross is either set as missing within the problematic cross
(\code{MAF.cr.miss = TRUE}), or remove from the marker matrix
(\code{MAF.cr.miss = FALSE}). For default value see details.}

\item{MAF.cr.miss}{Logical value specifying if maker with a too low
segregation rate within cross should be put as missing or discarded. If
\code{MAF.cr.miss = TRUE}, marker scores with a problematic segregation rate
in at least one cross will be put as missing in the problematic cross(es).
If \code{MAF.cr.miss = FALSE}, the whole marker will be discarded.
Default = TRUE.}

\item{mk.miss}{\code{Numerical} value comprised between 0 and 1 indicating
the missingness rate at the population level above which a marker will be
removed. Default = 0.1.}

\item{gen.miss}{\code{Numerical} value comprised between 0 and 1 indicating
the missingness rate above which a genotype will be removed. Default = 0.25.}

\item{ABH}{\code{Logical} value specifying if the marker matrix data should
be converted into ABH format within cross. \strong{If user wants to convert
the markers to the ABH format and parent have heterozygous or missing marker
scores, the argument \code{het_miss_par} must be set to TRUE}.
If (\code{ABH = FALSE}), the marker data will be let in the same format as
the one used in \code{geno.off}. Default = TRUE.}

\item{het_miss_par}{\code{Logical} value. if \code{het_miss_par = TRUE},
the function will use the offspring segregation to try to infer the allele
that was transmitted by the heterozygous or missing parent at a particular
locus in order to make the ABH conversion. Default = FALSE.}

\item{verbose}{\code{Logical} value indicating if the steps of the QC should
be printed. Default = TRUE.}

\item{impute}{\code{Logical} value. if \code{impute = TRUE}, the function
will impute missing values using the \code{codeGeno()} function from the
synbreed package. Default = FALSE.}

\item{impute.type}{\code{character} with one out of \code{"fix"},
\code{"random"}, \code{"family"}, \code{"beagle"}, \code{"beagleAfterFamily"},
\code{"beagleAfterFamilyNoRand"}. For details see synbreed package
documentation. \strong{To be able to use Beagle for imputation, Please load
the synbreed package using \code{library(synbreed)}} Default = "random".}

\item{map_bp}{\code{data.frame} with three columns specifying for each marker
position the marker identifier, the \code{numeric} or \code{character}
chromosome the and physical bp position. This argument is necessary for
imputation using Beagle. Default = NULL.}

\item{replace.value}{\code{numeric} scalar to replace missing value in case
\code{impute.type = fix}. Only 0, 1, 2. Should be chosen. Default = NULL.}

\item{label.heter}{This is either a scalar or vector of characters to identify
heterozygous genotypes or a function returning TRUE if an element of the
marker matrix is the heterozygous genotype. Defining a function is useful,
if number of unique heterozygous genotypes is large, i.e. if genotypes are
coded by alleles. If the heterozygous genotype is coded like
"A/T","G/C", ..., "AG", "CG", ..., "T:C", "G:A", ... or "G|T", "A|C", ...
then label.heter="alleleCoding" can be used. Note that
heterozygous values must be identified unambiguously by label.heter. Use
label.heter=NULL if there are only homozygous genotypes, i.e. in DH lines,
to speed up computation and restrict imputation to values 0 and 2.
Default = "alleleCoding".}

\item{parallel}{\code{Logical} value specifying if the function should be
executed in parallel on multiple cores. To run function in parallel user must
provide cluster in the \code{cluster} argument. Default = FALSE.}

\item{cluster}{Cluster object obtained with the function \code{makeCluster()}
from the parallel package. Default = NULL.}
}
\value{
list containing the following objects

\item{geno.off}{Subseted offspring marker martrix. if \code{ABH = TRUE}
markers scores transformed into ABH format.}

\item{geno.par}{Subseted parents marker martrix.}

\item{geno.par.clu}{Parent marker matrix with only problematic markers,
marker fully monomorphic or fully missing removed. This element can be
used for the argument \code{marker.data} of the function
\code{\link{parent_cluster}}.}

\item{map.par.clu}{Genetic map corresponding to the list of marker of the
\code{geno.par.clu} object. This map can be used for the argument
\code{haplo.map} in function \code{\link{parent_cluster}}.}

\item{cross.ind}{Corresponding cross indicator vector.}

\item{par.per.cross}{Matrix specifying the crosses and for each cross the
parent 1 of the cross and the parent 2.} 

\item{trait}{Corresponding phenotypic values.}

\item{map}{Corresponding genotypic map.}

\item{rem.mk}{Vector of markers that have been removed.}

\item{rem.geno}{Vector of genotypes that have been removed.}
}
\description{
Perform different operations of quality control (QC) on the marker matrix and
return the marker matrix, the map and the phenotype data in format to form a
\code{mppData} object.
}
\details{
The different operations of the quality control are the following:

\enumerate{

\item{Remove markers with more than two alleles
(\code{\link{QC_GenotypingError}}).}

\item{Remove markers that are monomorphic or fully missing in the parents
(\code{\link{QC_MAF}}).}

\item{Remove markers with a missing rate higher than \code{mk.miss} across
the entire MPP (\code{\link{QC_missing}}).}

\item{Remove genotypes with more missing markers than \code{gen.miss}
(\code{\link{QC_missing}}).}

\item{Remove crosses with less than \code{n.lim} genotypes
(\code{\link{QC_minCrSize}}).}

\item{Keep only the most polymorphic marker when multiple markers map at the
same position.}

\item{Remove markers with a minor allele frequency (MAF) below a threshold
given by \code{MAF.pop.lim} (\code{\link{QC_MAF}}).}

\item{Determine markers having a too low within cross MAF
(\code{\link{QC_MAF}} and \code{\link{QC_tagMAFCr}}). The user can give the
critical values for MAF within cross using \code{MAF.cr.lim}.

By default, the within cross MAF values are defined by the following function
of the cross-size n.ci: MAF(n.ci) = 0.5 if n.ci c [0, 10] and MAF(n.ci) =
(4.5/n.ci) + 0.05 if n.ci > 10. This means that up to 10 genotypes,
the critical within cross MAF is set to 50%. Then it decreases when the
number of genotype increases until 5% set as a lower bound.

If the within cross MAF is below the limit in at least one cross, then marker
scores of the problematic cross are either put as missing
(\code{MAF.cr.miss = TRUE}) or the whole marker is discarded
(\code{MAF.cr.miss = FALSE}). By default, \code{MAF.cr.miss = TRUE} which
allows to include a larger number of markers and to cover a wider genetic
diversity.}

\item{If \code{ABH = TRUE}, convert offspring genotype data into ABH format
(\code{\link{cross_ABH}} or \code{\link{cross_ABH_het}}).}

\item{If \code{impute = TRUE}, imputation of the missing values for the
IBS bi-allelic model using the \code{codeGeno()} function from synbreed
(Wimmer et al., 2012). The imputation can only be done if data are not
converted into ABH format (\code{ABH = FALSE}).}

}
}
\examples{

data(USNAM_geno)
data(USNAM_pheno)
data(USNAM_map)

cross.ind <- substr(rownames(USNAM_pheno), 1, 4)
geno.off <- USNAM_geno[7:506, ]
geno.par <- USNAM_geno[1:6, ]

map <- USNAM_map
trait <- data.frame(rownames(USNAM_pheno), USNAM_pheno[, 1],
                   stringsAsFactors = FALSE)
colnames(trait) <- c('genotypes', 'ULA')
rownames(trait) <- rownames(USNAM_pheno)
par.per.cross <- cbind(unique(cross.ind), rep("B73", 5),
                       rownames(geno.par)[2:6])

# QC IBD model and analysis
###########################

data <- QC_proc(geno.off = geno.off, geno.par = geno.par, map = map,
                trait = trait, cross.ind = cross.ind,
                par.per.cross = par.per.cross, n.lim = 15,
                MAF.pop.lim = 0.05, mk.miss = 0.1,
                gen.miss = 0.25, ABH = TRUE, het_miss_par = TRUE,
                parallel = FALSE)

# QC_proc() outputs can be directly used to form the mppData object
# (gathering of all data necessary for the QTL analysis) and to form
# the parent clustering object necessary for the ancestral model

# formation of mppData object

\dontrun{

mppData <- mppData_form(geno = data$geno.off, geno.par = data$geno.par,
                        IBS = FALSE, type = "F", nb.gen = 6,
                        type.mating = "selfing", map = data$map,
                        trait = data$trait, cross.ind = data$cross.ind,
                        par.per.cross = data$par.per.cross,
                        step = 5, dir = getwd())

# Parent clustering

library(clusthaplo)
  
cluster <- parent_cluster(haplo.map = data$map.par.clu,
                          consensus.map = mppData$map[, -3],
                          marker.data = t(data$geno.par.clu), na.strings = NA,
                          step.size = 1000, window = 25)

par.clu <- cluster[[1]]

# then these data can be used for QTL detection. Let us for example compute
# a QTL detection based on the ancestral model

QTL <- mpp_proc(pop.name = "USNAM", trait.name = "ULA", mppData = mppData,
                Q.eff = "anc", par.clu = par.clu, output.loc = getwd())

}

# QC IBS model with imputation
##############################

data(USNAM_geno)
data(USNAM_pheno)
data(USNAM_map)

cross.ind <- substr(USNAM_pheno[, 1], 1, 4)
geno.off <- USNAM_geno[7:506, ]

# It is a RIL population. So set the heterozygous score to missing.

geno.off[geno.off == "AC"] <- NA
geno.off[geno.off == "AG"] <- NA
geno.off[geno.off == "AT"] <- NA
geno.off[geno.off == "CG"] <- NA
geno.off[geno.off == "CT"] <- NA
geno.off[geno.off == "GT"] <- NA

geno.par <- USNAM_geno[1:6, ]

map <- USNAM_map
trait <- data.frame(rownames(USNAM_pheno), USNAM_pheno[, 1],
                   stringsAsFactors = FALSE)
colnames(trait) <- c('genotypes', 'ULA')
rownames(trait) <- rownames(USNAM_pheno)
par.per.cross <- cbind(unique(cross.ind), rep("B73", 5),
                       rownames(geno.par)[2:6])


data <- QC_proc(geno.off = geno.off, geno.par = geno.par, map = map,
                trait = trait, cross.ind = cross.ind,
                par.per.cross = par.per.cross, ABH = FALSE, impute = TRUE,
                impute.type = "family")

}
\references{
Wimmer, V., Albrecht, T., Auinger, H. J., & Schon, C. C. (2012). synbreed: a
framework for the analysis of genomic prediction data using R.
Bioinformatics, 28(15), 2086-2087.

Browning, B. L., & Browning, S. R. (2013). Improving the accuracy and
efficiency of identity-by-descent detection in population data. Genetics,
194(2), 459-471.
}
\seealso{
\code{\link{cross_ABH}}, \code{\link{cross_ABH_het}}
\code{\link{QC_GenotypingError}}, \code{\link{QC_MAF}},
\code{\link{QC_minCrSize}}, \code{\link{QC_missing}},
\code{\link{QC_tagMAFCr}}, \code{\link{parent_cluster}}
}
\author{
Vincent Garin
}
